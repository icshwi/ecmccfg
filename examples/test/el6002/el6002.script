###############################################################################
#-d /**
#-d   \brief Example script of EL6002 (2 channel RS232)
#-d   \details Example shows how to read and write data over RS232 (EL6002).
#-d   
#-d   \author Anders Sandstroem
#-d   \file
#-d */
#-  
#- Write Data (send "CMD_TO_SEND" over RS232):
#- NOTE: Max length is 22bytes at the time (can be extended)
#- 1. caput  -S IOC_TEST:ec0-s53-EL6002-Serial1-ArrayOut "CMD_TO_SEND"
#-
#- Read data:
#- 1. camonitor -S IOC_TEST:ec0-s53-EL6002-Serial1-ArrayIn
#- 2. Trigger next read by (transfer from RS232 input buffer to PDOs): caput IOC_TEST:ec0-s53-EL6002-Serial1-Cmd-Trigg-Read 1
#- 3. Several records showing status are available
#-
#- A simple test can be done by wire a loopback connection on the DB9:
#-  1. Bridge 2 and 3
#-  2. Bridge 7 and 8
#-  3. Bridge 1,4 and 6
#-
#- Epics records are linked to below variables in plc code:
#- static.outBytes      : Number of bytes to write (this is done aurmatically when write to ArrayOut waveform)
#- static.InBytes       : Number of avialble bytes to read
#- static.triggWrite;   : Trigg write of data by rising edge (this is done aurmatically when write to ArrayOut waveform)
#- static.triggRead;    : Trigger New read of data. (manual triggering of next read is needed in this example)
#-

##############################################################################
## Initiation:
epicsEnvSet("IOC" ,"$(IOC="IOC_TEST")")
epicsEnvSet("ECMCCFG_INIT" ,"")  #Only run startup once (auto at PSI, need call at ESS), variable set to "#" in startup.cmd
epicsEnvSet("SCRIPTEXEC" ,"$(SCRIPTEXEC="iocshLoad")")

require ecmccfg master

#- Choose motor record driver implementation
#-   ECMC_MR_MODULE="ecmcMotorRecord"  => ECMC native built in motor record support (Default)
#-   ECMC_MR_MODULE="EthercatMC"       => Motor record support from EthercatMC module (need to be loaded)
#- Uncomment the two lines below to use EthercatMC:
#- epicsEnvSet(ECMC_MR_MODULE,"EthercatMC")
#- require EthercatMC 3.0.2

# run module startup.cmd (only needed at ESS  PSI auto call at require)
$(ECMCCFG_INIT)$(SCRIPTEXEC) ${ecmccfg_DIR}startup.cmd, "IOC=$(IOC),ECMC_VER=master,stream_VER=2.8.10"

##############################################################################
## Config hardware:

epicsEnvSet("ECMC_SAMPLE_RATE_MS",  "1")

#- Configure EL6002 with custom database and config of SDOs
epicsEnvSet(ECMC_EC_SDO_INDEX, "0x8000")  # To set correct sdo address in sensor config
epicsEnvSet("ECMC_EC_SLAVE_NUM",              "$(SLAVE_ID=53)")
${SCRIPTEXEC} ${ecmccfg_DIR}configureSlave.cmd, "SLAVE_ID=$(ECMC_EC_SLAVE_NUM), HW_DESC=EL6002, CONFIG=-Sensor-chX-default, SUBST_FILE=ecmcEL6002_custom.substitutions"

#Apply hardware configuration
ecmcConfigOrDie "Cfg.EcApplyConfig(1)"

##############################################################################
## PLC 0
$(SCRIPTEXEC) $(ecmccfg_DIR)loadPLCFile.cmd, "PLC_ID=0, SAMPLE_RATE_MS=100,FILE=./plc/el6002.plc, PLC_MACROS='PLC_ID=0,SLAVE_ID=$(ECMC_EC_SLAVE_NUM),DBG='")

##############################################################################
############# Configure diagnostics:

ecmcConfigOrDie "Cfg.EcSetDiagnostics(1)"
ecmcConfigOrDie "Cfg.EcEnablePrintouts(0)"
ecmcConfigOrDie "Cfg.EcSetDomainFailedCyclesLimit(100)"

# go active
$(SCRIPTEXEC) ($(ecmccfg_DIR)setAppMode.cmd)
