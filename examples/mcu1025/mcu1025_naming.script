##############################################################################
## Example config ESS crate of type MCU1025: Naming test

##############################################################################
## Initiation:
epicsEnvSet("IOC" ,"$(IOC="IOC_TEST")")
epicsEnvSet("ECMCCFG_INIT" ,"")  #Only run startup once (auto at PSI, need call at ESS), variable set to "#" in startup.cmd
epicsEnvSet("SCRIPTEXEC" ,"$(SCRIPTEXEC="iocshLoad")")

require ecmccfg develop

# run module startup.cmd (only needed at ESS  PSI auto call at require)
$(ECMCCFG_INIT)$(SCRIPTEXEC) ${ecmccfg_DIR}startup.cmd, "IOC=$(IOC),ECMC_VER=develop,stream_VER=2.8.10"

# Choose naming
epicsEnvSet("SYS", "SYS")
epicsEnvSet("SUB", "SUB")
epicsEnvSet("DIS", "DIS")
epicsEnvSet("DEV", "DEV")
epicsEnvSet("IDX", "000")

ecmcEpicsEnvSetCalc("IDX", "${ECMC_EC_SLAVE_NUM=0}")
epicsEnvSet("ECMC_PREFIX" ,"${SYS}-${SUB}:${DIS}-${DEV}-${IDX}:")

##############################################################################
## Configure hardware: MCU1025

#Configure EK1100 coupler terminal
epicsEnvSet(ECMC_EC_SLAVE_NUM,${ECMC_EC_SLAVE_NUM=0})
ecmcEpicsEnvSetCalc("IDX", "${ECMC_EC_SLAVE_NUM=0}",%03d)
epicsEnvSet("DEV", "ECATC")
epicsEnvSet("ECMC_PREFIX" ,"${SYS}-${SUB}:${DIS}-${DEV}-${IDX}:")
${SCRIPTEXEC} ${ecmccfg_DIR}addSlave.cmd, "SLAVE_ID=${ECMC_EC_SLAVE_NUM}, HW_DESC=EK1100"


#Configure EL1018 digital input terminal
ecmcEpicsEnvSetCalc(ECMC_EC_SLAVE_NUM, "${ECMC_EC_SLAVE_NUM}+1")
epicsEnvSet(ECMC_EC_SLAVE_NUM,${ECMC_EC_SLAVE_NUM=0})
ecmcEpicsEnvSetCalc("IDX", "${ECMC_EC_SLAVE_NUM=0}",%03d)
epicsEnvSet("DEV", "ECATIO")
epicsEnvSet("ECMC_PREFIX" ,"${SYS}-${SUB}:${DIS}-${DEV}-${IDX}:")
${SCRIPTEXEC} ${ecmccfg_DIR}addSlave.cmd, "SLAVE_ID=${ECMC_EC_SLAVE_NUM}, HW_DESC=EL1018"

#Configure EL2808 digital output terminal
ecmcEpicsEnvSetCalc(ECMC_EC_SLAVE_NUM, "${ECMC_EC_SLAVE_NUM}+1")
epicsEnvShow("ECMC_EC_SLAVE_NUM")
epicsEnvSet(ECMC_EC_SLAVE_NUM,${ECMC_EC_SLAVE_NUM=0})
ecmcEpicsEnvSetCalc("IDX", "${ECMC_EC_SLAVE_NUM=0}",%03d)
epicsEnvSet("DEV", "ECATIO")
epicsEnvSet("ECMC_PREFIX" ,"${SYS}-${SUB}:${DIS}-${DEV}-${IDX}:")
${SCRIPTEXEC} ${ecmccfg_DIR}addSlave.cmd, "SLAVE_ID=${ECMC_EC_SLAVE_NUM}, HW_DESC=EL2808"

# Save the slave number for later
epicsEnvSet("ECMC_EC_SLAVE_NUM_DIG_OUT", "${ECMC_EC_SLAVE_NUM}")

#Configure EL5002 2-channel SSI encoder terminal, motor 1
ecmcEpicsEnvSetCalc(ECMC_EC_SLAVE_NUM, "${ECMC_EC_SLAVE_NUM}+1")
epicsEnvSet(ECMC_EC_SLAVE_NUM,${ECMC_EC_SLAVE_NUM=0})
ecmcEpicsEnvSetCalc("IDX", "${ECMC_EC_SLAVE_NUM=0}",%03d)
epicsEnvSet("DEV", "ECATIO")
epicsEnvSet("ECMC_PREFIX" ,"${SYS}-${SUB}:${DIS}-${DEV}-${IDX}:")
${SCRIPTEXEC} ${ecmccfg_DIR}addSlave.cmd, "SLAVE_ID=${ECMC_EC_SLAVE_NUM}, HW_DESC=EL5002"

#Configure Baumer encoder for EL5002 2-channel SSI encoder terminal (Channel 1)
${SCRIPTEXEC} ${ecmccfg_DIR}applySlaveConfig.cmd "CONFIG=-Encoder-ch1-Baumer-BMMH30D1G24C1213P55"

#Configure Baumer encoder for EL5002 2-channel SSI encoder terminal (Channel 2)
${SCRIPTEXEC} ${ecmccfg_DIR}applySlaveConfig.cmd "CONFIG=-Encoder-ch2-Baumer-BMMH30D1G24C1213P55"

# Configure EL9505 Power supply terminal 5V
ecmcEpicsEnvSetCalc(ECMC_EC_SLAVE_NUM, "${ECMC_EC_SLAVE_NUM}+1")
epicsEnvSet(ECMC_EC_SLAVE_NUM,${ECMC_EC_SLAVE_NUM=0})
ecmcEpicsEnvSetCalc("IDX", "${ECMC_EC_SLAVE_NUM=0}",%03d)
epicsEnvSet("DEV", "ECATIO")
epicsEnvSet("ECMC_PREFIX" ,"${SYS}-${SUB}:${DIS}-${DEV}-${IDX}:")
${SCRIPTEXEC} ${ecmccfg_DIR}addSlave.cmd, "SLAVE_ID=${ECMC_EC_SLAVE_NUM}, HW_DESC=EL9505"

# Configure EL1252 digital input terminal
ecmcEpicsEnvSetCalc(ECMC_EC_SLAVE_NUM, "${ECMC_EC_SLAVE_NUM}+1")
epicsEnvSet(ECMC_EC_SLAVE_NUM,${ECMC_EC_SLAVE_NUM=0})
ecmcEpicsEnvSetCalc("IDX", "${ECMC_EC_SLAVE_NUM=0}",%03d)
epicsEnvSet("DEV", "ECATIO")
epicsEnvSet("ECMC_PREFIX" ,"${SYS}-${SUB}:${DIS}-${DEV}-${IDX}:")
${SCRIPTEXEC} ${ecmccfg_DIR}addSlave.cmd, "SLAVE_ID=${ECMC_EC_SLAVE_NUM}, HW_DESC=EL1252"

# Configure EL9410 Power supply with refresh of E-Bus.
ecmcEpicsEnvSetCalc(ECMC_EC_SLAVE_NUM, "${ECMC_EC_SLAVE_NUM}+1")
epicsEnvSet(ECMC_EC_SLAVE_NUM,${ECMC_EC_SLAVE_NUM=0})
ecmcEpicsEnvSetCalc("IDX", "${ECMC_EC_SLAVE_NUM=0}",%03d)
epicsEnvSet("DEV", "ECATIO")
epicsEnvSet("ECMC_PREFIX" ,"${SYS}-${SUB}:${DIS}-${DEV}-${IDX}:")
${SCRIPTEXEC} ${ecmccfg_DIR}addSlave.cmd, "SLAVE_ID=${ECMC_EC_SLAVE_NUM}, HW_DESC=EL9410"

#Configure EL7037 stepper drive terminal, motor 1
ecmcEpicsEnvSetCalc(ECMC_EC_SLAVE_NUM, "${ECMC_EC_SLAVE_NUM}+1")
epicsEnvSet(ECMC_EC_SLAVE_NUM,${ECMC_EC_SLAVE_NUM=0})
ecmcEpicsEnvSetCalc("IDX", "${ECMC_EC_SLAVE_NUM=0}",%03d)
epicsEnvSet("DEV", "ECATIO")
epicsEnvSet("ECMC_PREFIX" ,"${SYS}-${SUB}:${DIS}-${DEV}-${IDX}:")
${SCRIPTEXEC} ${ecmccfg_DIR}configureSlave.cmd, "SLAVE_ID=${ECMC_EC_SLAVE_NUM}, HW_DESC=EL7037, CONFIG=-Motor-Nanotec-ST4118L1804-B, CFG_MACROS='I_RUN_MA=900,I_STDBY_MA=200'"

#Configure EL7037 stepper drive terminal, motor 2
ecmcEpicsEnvSetCalc(ECMC_EC_SLAVE_NUM, "${ECMC_EC_SLAVE_NUM}+1")
epicsEnvSet(ECMC_EC_SLAVE_NUM,${ECMC_EC_SLAVE_NUM=0})
ecmcEpicsEnvSetCalc("IDX", "${ECMC_EC_SLAVE_NUM=0}",%03d)
epicsEnvSet("DEV", "ECATIO")
epicsEnvSet("ECMC_PREFIX" ,"${SYS}-${SUB}:${DIS}-${DEV}-${IDX}:")
${SCRIPTEXEC} ${ecmccfg_DIR}configureSlave.cmd, "SLAVE_ID=${ECMC_EC_SLAVE_NUM}, HW_DESC=EL7037, CONFIG=-Motor-Nanotec-ST4118L1804-B"

#Apply hardware configuration
ecmcConfigOrDie "Cfg.EcApplyConfig(1)"

# ADDITIONAL SETUP
# Set all outputs to feed switches
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM_DIG_OUT},BO_1,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM_DIG_OUT},BO_2,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM_DIG_OUT},BO_3,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM_DIG_OUT},BO_4,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM_DIG_OUT},BO_5,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM_DIG_OUT},BO_6,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM_DIG_OUT},BO_7,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM_DIG_OUT},BO_8,1)"
# END of ADDITIONAL SETUP

##############################################################################
## AXIS 1
#
#epicsEnvSet("DEV",      "$(IOC)")

epicsEnvSet(ECMC_EC_SLAVE_NUM,${ECMC_EC_SLAVE_NUM=0})
ecmcEpicsEnvSetCalc("IDX", "000",%03d)
epicsEnvSet("DEV", "SLIT")
epicsEnvSet("DEV" ,"${SYS}-${SUB}:${DIS}-${DEV}-${IDX}")
$(SCRIPTEXEC) ($(ecmccfg_DIR)configureAxis.cmd, CONFIG=./cfg/linear_1.ax)

##############################################################################
## AXIS 2
#
#epicsEnvSet("DEV",      "$(IOC)")
ecmcEpicsEnvSetCalc("IDX", "000",%03d)
epicsEnvSet("DEV", "SLIT")
epicsEnvSet("DEV" ,"${SYS}-${SUB}:${DIS}-${DEV}-${IDX}")
$(SCRIPTEXEC) ($(ecmccfg_DIR)configureAxis.cmd, CONFIG=./cfg/linear_2.ax)

##############################################################################
############# Configure diagnostics:

ecmcConfigOrDie "Cfg.EcSetDiagnostics(1)"
ecmcConfigOrDie "Cfg.EcEnablePrintouts(0)"
ecmcConfigOrDie "Cfg.EcSetDomainFailedCyclesLimit(100)"
ecmcConfigOrDie "Cfg.SetDiagAxisIndex(1)"
ecmcConfigOrDie "Cfg.SetDiagAxisFreq(2)"
ecmcConfigOrDie "Cfg.SetDiagAxisEnable(0)"

# naming
ecmcEpicsEnvSetCalc("IDX", "000",%03d)
epicsEnvSet("DEV", "ECMC")
epicsEnvSet("ECMC_PREFIX" ,"${SYS}-${SUB}:${DIS}-${DEV}-${IDX}:")

# go active
$(SCRIPTEXEC) ($(ecmccfg_DIR)setAppMode.cmd)


iocInit()

dbl > pvs_naming.log
